[versions]

# Compiler and standard library versions
java="21" # For an Android project, change to 17.
kotlin="1.9.22"

# Core Android plugin and library versions
android-gradle = "8.2.2"
app-compat = "1.6.1"
lifecycle = "2.7.0"
navigation = "2.7.7"
constraint-layout = "2.1.4"
recycler-view = "1.3.2"
fragment = "1.6.2"
preference = "1.2.1"

# Other standard & Google Android library versions
room = "2.6.1"
hilt = "2.50"
material = "1.11.0"
play-services-auth = "20.7.0"

# JavaFX plugin and library versions
openjfx-plugin = "0.1.0"
openjfx-library = "21.0.2"

# Third-party plugin and library versions
rx-java = "3.1.8"
rx-android = "3.0.2"
rx-javafx ="3.0.3"
retrofit = "2.9.0"
okhttp = "4.12.0"
okio = "3.7.0"
logging-interceptor = "4.12.0"
gson = "2.10.1"
dagger = "2.50"
modularity = "1.8.12"
badass-jlink = "3.0.1"
shadow = "8.1.1"
picasso = "2.8"
schema-parser = "1.0.0"

# Test plugin & library versions
junit = "5.10.3"
junit-plugin = "1.9.3.0"
android-test-runner = "1.5.2"
junit-android = "1.4.0"
espresso = "3.5.1"

[libraries]

# Kotlin standard library delegates
kotlin = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlin-jdk7 = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-jdk7", version.ref = "kotlin" }
kotlin-jdk8 = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-jdk8", version.ref = "kotlin" }

# Basic Android components
app-compat = { group = "androidx.appcompat", name = "appcompat", version.ref = "app-compat" }
constraint-layout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraint-layout" }
recycler-view = { group = "androidx.recyclerview", name ="recyclerview", version.ref = "recycler-view" }

# Fragment & navigation framework libraries
fragment = { group = "androidx.fragment", name = "fragment", version.ref = "fragment" }
navigation-fragment = { group = "androidx.navigation", name = "navigation-fragment", version.ref = "navigation" }
navigation-ui = { group = "androidx.navigation", name = "navigation-ui", version.ref = "navigation" }

# Lifecycle (LiveData and ViewModel) libraries
lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "lifecycle" }
lifecycle-livedata = { group = "androidx.lifecycle", name = "lifecycle-livedata", version.ref = "lifecycle" }

# Preferences/settings components
preference = { group = "androidx.preference", name = "preference", version.ref = "preference" }

# Material Design components
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# ReactiveX libraries
rx-java = { group = "io.reactivex.rxjava3", name = "rxjava", version.ref = "rx-java"}
rx-android = { group = "io.reactivex.rxjava3", name = "rxandroid", version.ref = "rx-android"}
rx-javafx = { group = "org.pdfsam.rxjava3", name = "rxjavafx", version.ref = "rx-javafx"}

# Room annotation processor, runtime library, and ReactiveX integration
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-rx-java = { group = "androidx.room", name = "room-rxjava3", version.ref = "room" }

# Gson (Google JSON parser) library
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

# Google Sign-in library
play-auth = { group = "com.google.android.gms", name = "play-services-auth", version.ref = "play-services-auth"}

# Retrofit (REST client) with ReactiveX & Gson integration
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
retrofit-adapter-rx-java = { group = "com.squareup.retrofit2", name = "adapter-rxjava3", version.ref = "retrofit" }

# OkHttp libraries
logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "logging-interceptor" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okio = { group = "com.squareup.okio", name = "okio", version.ref = "okio" }

# Picasso image retrieval library
picasso = { group = "com.squareup.picasso", name = "picasso", version.ref = "picasso"}

# Dagger & Hilt dependency-injection library & annotation processor
hilt-android-core = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
dagger-core = { group = "com.google.dagger", name = "dagger", version.ref = "dagger" }
dagger-compiler = { group = "com.google.dagger", name = "dagger-compiler", version.ref = "dagger" }

# Libraries for JVM-based testing.
junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit" }
junit-aggregator = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }

# Libraries for instrumented (run in Android) testing.
test-runner = { group = "androidx.test", name = "runner", version.ref = "android-test-runner" }
junit-android-core = { group = "de.mannodermaus.junit5", name = "android-test-core", version.ref = "junit-android" }
junit-android-runner = { group = "de.mannodermaus.junit5", name = "android-test-runner", version.ref = "junit-android" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }
hilt-android-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }

[bundles]

[plugins]

# Android plugins
android-application = { id = "com.android.application", version.ref = "android-gradle" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
navigation-safeargs = { id = "androidx.navigation.safeargs", version.ref = "navigation" }
schema-parser = { id = "com.nickbenn.room-schema-parser", version.ref = "schema-parser" }
junit = { id = "de.mannodermaus.android-junit5", version.ref = "junit-plugin" }

# JavaFX plugin
openjfx = { id = "org.openjfx.javafxplugin", version.ref = "openjfx-plugin"}

# Java modularization & packaging plugins
modularity = { id = "org.javamodularity.moduleplugin", version.ref = "modularity" }
badass-jlink = { id = "org.beryx.jlink", version.ref = "badass-jlink" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref ="shadow"}
